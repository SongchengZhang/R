library(readr)
library(tidyverse)
library(alr4)
library(broom)
library(readr)
Calories <- read_csv("Calories.csv")
View(Calories)
cal <- read_csv("Calories.csv")
View(Calories)
lm.main <- lm(calories ~ type + time, data=cal)
summary(lm.main)
augment(lm.main) %>% ggplot(aes(x = `time`, y = `calories`, color = type)) + geom_point() + geom_line(aes(y = .fitted))
augment(lm.main) %>% ggplot(aes(x = `time`, y = `calories`, color = type)) + geom_point()
lm.inter <- lm(calories ~ type*time, data=cal)
summary(lm.inter)
cal %>% ggplot(aes(x = time, y = calories, color = type)) + geom_point() + geom_smooth(method = "lm", se = FALSE)
#graph of each type
augment(lm.main) %>% ggplot(aes(x = `time`, y = `calories`, color = type)) + geom_point() + geom_line(aes(y = .fitted))
M1 = lm(calories ~ time, data=cal)
n = dim(cal)[1]
Mp1 = length(coef(M1))
#AIC
n*log(sum(resid(M1)^2)/n) + 2*Mp1
#BIC
n*log(sum(resid(M1)^2)/n) + log(n)*Mp1
M1 = lm(calories ~ time, data=cal)
n = dim(cal)[1]
Mp1 = length(coef(M1))
#AIC
n*log(sum(resid(M1)^2)/n) + 2*Mp1
#BIC
n*log(sum(resid(M1)^2)/n) + log(n)*Mp1
AIC(M1)
n
M2 = lm(calories ~ time+type, data=cal)
n = dim(cal)[1]
Mp2 = length(coef(M2))
#AIC
n*log(sum(resid(M2)^2)/n) + 2*Mp2
#BIC
n*log(sum(resid(M2)^2)/n) + log(n)*Mp2
M2 = lm(calories ~ time+type, data=cal)
n = dim(cal)[1]
Mp2 = length(coef(M2))
#AIC
n*log(sum(resid(M2)^2)/n) + 2*Mp2
#BIC
n*log(sum(resid(M2)^2)/n) + log(n)*Mp2
AIC(M2)
M1 = lm(calories ~ time, data=cal)
n = dim(cal)[1]
Mp1 = length(coef(M1))
#AIC
n*log(sum(resid(M1)^2)/n) + 2*Mp1
#BIC
n*log(sum(resid(M1)^2)/n) + log(n)*Mp1
AIC(M1)
M3 = lm(calories ~ time*type, data=cal)
n = dim(cal)[1]
Mp3 = length(coef(M3))
#AIC
n*log(sum(resid(M3)^2)/n) + 2*Mp3
#BIC
n*log(sum(resid(M3)^2)/n) + log(n)*Mp3
M3 = lm(calories ~ time*type, data=cal)
n = dim(cal)[1]
Mp3 = length(coef(M3))
#AIC
n*log(sum(resid(M3)^2)/n) + 2*Mp3
#BIC
n*log(sum(resid(M3)^2)/n) + log(n)*Mp3
AIC(M3)
dim(cal)
cal
M3 = lm(calories ~ time*type, data=cal)
n = dim(cal)[1]
Mp3 = length(coef(M3))
#AIC
n*log(sum(resid(M3)^2)/n) + 2*Mp3
#BIC
n*log(sum(resid(M3)^2)/n) + log(n)*Mp3
AIC(M3)
set.seed(33013301)
calories = calories %>% mutate(fold = sample(head(rep(5:1, 26), 126)))
set.seed(33013301)
cal = cal %>% mutate(fold = sample(head(rep(5:1, 26), 126)))
cal
vector ("list", 5)
[foldi]
preds.M1 = preds.M2 = preds.M3 = rep(NA, 126)
for(i in 1:126) {
foldi = calories$fold[i]
preds.M1[i] = predict(M1[[foldi]],
newdata = calories[i,])
preds.M2[i] = predict(M2[[foldi]],
newdata = calories[i,])
preds.M3[i] = predict(M3[[foldi]],
newdata = calories[i,])
}
M1 = M2 = M3 = vector ("list", 5)
for(k in 1:5) {
M1[[k]] = lm(calories ~ time,
data = calories %>% filter(fold != k))
M2[[k]] = lm(calories ~ time+type,
data = calories %>% filter(fold != k))
M3[[k]] = lm(calories ~ time*type,
data = calories %>% filter(fold != k))
}
M1 = M2 = M3 = vector ("list", 5)
for(k in 1:5) {
M1[[k]] = lm(cal ~ time,
data = cal %>% filter(fold != k))
M2[[k]] = lm(cal ~ time+type,
data = cal %>% filter(fold != k))
M3[[k]] = lm(cal ~ time*type,
data = cal %>% filter(fold != k))
}
View(cal)
M1 = M2 = M3 = vector ("list", 5)
for(k in 1:5) {
M1[[k]] = lm(cal ~ time,
data = cal %>% filter(fold != k))
M2[[k]] = lm(cal ~ time+type,
data = cal %>% filter(fold != k))
M3[[k]] = lm(cal ~ time*type,
data = cal %>% filter(fold != k))
}
M1 <- lm(calories ~ time, data = calories)
M1 <- lm(cal ~ time, data = calories)
M1 <- lm(cal ~ time, data = cal)
calories = read_csv("C:/Users/anton/OneDrive/Desktop/STAT 3301/Project 2/CaloriesProject2.csv")
M1 <- lm(cal ~ time, data = cal)
view(more variables and interaction)
view("more variables and interaction")
view(Untitled)
view("Untitled")
knitr::opts_chunk$set(echo = TRUE)
##########################################################################################################
# Logistic Regression Model - Gambia Malaria Data
##########################################################################################################
set.seed(7)
library(geoR)
install.packages(geoR)
install.packages("geoR")
library(geoR)
install.packages("Rcmdr", dependencies = TRUE)
library(geoR)
library(geoR)
install.packages("geoR")
library(geoR)
##########################################################################################################
# Logistic Regression Model - Gambia Malaria Data
##########################################################################################################
set.seed(7)
data(gambia)
n=length(gambia$pos)
knitr::opts_chunk$set(echo = TRUE)
library(coda)
view(diamonds)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
smaller <- diamonds %>%
filter(carat <= 2.5)
knitr::opts_chunk$set(echo = TRUE)
smaller %>%
ggplot(aes(carat)) +
geom_freqpoly(binwidth = 0.01)
install.packages("distill")
